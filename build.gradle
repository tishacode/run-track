plugins {
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.jetbrains.kotlin.jvm' version '1.9.24'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.24'

    // Qualidade
    id 'org.jlleitschuh.gradle.ktlint' version '12.1.1'
    id 'io.gitlab.arturbosch.detekt' version '1.23.6'
}

group = 'com.runtrack'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

repositories {
	mavenCentral()
}

dependencies {
    // Core Spring e Kotlin
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("io.projectreactor.kotlin:reactor-kotlin-extensions")

    // Persitência reativa
    implementation("org.springframework.boot:spring-boot-starter-data-r2dbc")
    implementation("org.postgresql:r2dbc-postgresql")

    // Flyway precisa do driver JDBC
    implementation("org.flywaydb:flyway-core:10.17.0")
    runtimeOnly ('org.postgresql:postgresql')

    // Mensageria (RabbitMQ)
    implementation("org.springframework.boot:spring-boot-starter-amqp")

    // Documentação da API (Swagger/OpenAPI)
    implementation("org.springdoc:springdoc-openapi-starter-webflux-ui:2.5.0")

    // Observabilidade
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("io.micrometer:micrometer-registry-prometheus")

    // Qualidade de código
    implementation("org.slf4j:slf4j-api:2.0.7")

    // Testes unitários e integração
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("io.mockk:mockk:1.13.12")
    testImplementation("com.github.tomakehurst:wiremock-standalone:3.5.4")
    testImplementation("io.projectreactor:reactor-test")
    testImplementation("org.testcontainers:junit-jupiter:1.20.2")
    testImplementation("org.testcontainers:postgresql:1.20.2")
    testImplementation("org.testcontainers:rabbitmq:1.20.2")
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

// Kotlin Toolchain (opcional, mas ajuda)
kotlin {
    jvmToolchain(21)
}

// ktlint
ktlint {
    verbose = true
    outputToConsole = true
    disabledRules = ['no-wildcard-imports']
}

// detekt
detekt {
    buildUponDefaultConfig = true
    allRules = false
}
